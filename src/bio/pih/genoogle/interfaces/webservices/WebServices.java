
package bio.pih.genoogle.interfaces.webservices;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "WebServices", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServices {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "name", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.Name")
    @ResponseWrapper(localName = "nameResponse", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.NameResponse")
    public String name();

    /**
     * 
     * @param query
     * @param databank
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.SearchResponse")
    public String search(
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "databank", targetNamespace = "")
        String databank);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "databanks", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.Databanks")
    @ResponseWrapper(localName = "databanksResponse", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.DatabanksResponse")
    public List<String> databanks();

    /**
     * 
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "version", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.Version")
    @ResponseWrapper(localName = "versionResponse", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.VersionResponse")
    public Double version();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "parameters", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.Parameters")
    @ResponseWrapper(localName = "parametersResponse", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.ParametersResponse")
    public List<String> parameters();

    /**
     * 
     * @param parameter
     * @param value
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setParameter", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.SetParameter")
    @ResponseWrapper(localName = "setParameterResponse", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.SetParameterResponse")
    public boolean setParameter(
        @WebParam(name = "parameter", targetNamespace = "")
        String parameter,
        @WebParam(name = "value", targetNamespace = "")
        String value);

    /**
     * 
     * @param query
     * @param databank
     * @param parametersList
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchWithParameters", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.SearchWithParameters")
    @ResponseWrapper(localName = "searchWithParametersResponse", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.SearchWithParametersResponse")
    public String searchWithParameters(
        @WebParam(name = "query", targetNamespace = "")
        String query,
        @WebParam(name = "databank", targetNamespace = "")
        String databank,
        @WebParam(name = "parametersList", targetNamespace = "")
        List<String> parametersList);

    /**
     * 
     * @param fastaFiles
     * @param subSequenceLength
     * @param numberOfSubDatabanks
     * @param name
     * @param mask
     * @param lowComplexityFilter
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createDatabank", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.CreateDatabank")
    @ResponseWrapper(localName = "createDatabankResponse", targetNamespace = "http://webservices.interfaces.genoogle.pih.bio", className = "bio.pih.genoogle.interfaces.webservices.CreateDatabankResponse")
    public boolean createDatabank(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "fastaFiles", targetNamespace = "")
        List<String> fastaFiles,
        @WebParam(name = "subSequenceLength", targetNamespace = "")
        int subSequenceLength,
        @WebParam(name = "mask", targetNamespace = "")
        String mask,
        @WebParam(name = "numberOfSubDatabanks", targetNamespace = "")
        int numberOfSubDatabanks,
        @WebParam(name = "lowComplexityFilter", targetNamespace = "")
        int lowComplexityFilter);

}
