<project name="genoogle" default="compile" basedir=".">
	<description> Build script for genoogle project</description>


	<target name="init" description="Checks environment and setup variables">

		<!-- Check the current system classpath for JUnit -->
		<available classpath="${java.class.path}" classname="junit.framework.TestCase" property="junit.present" />

		<!-- Check for JUnit support in Ant (only in >= 1.3) -->
		<available classpath="${java.class.path}" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTest" property="junit.support" />


		<property name="name" value="Genoogle" />
		<property name="version" value="0.01" />

		<property name="docs.dir" location="./doc/javadoc" />
		<property name="src.dir" location="./src" />

		<!-- Main build directory -->
		<property name="build.dir" location="./ant-build" />
		<property name="build.classes.dir" location="${build.dir}/classes" />

		<!-- Jar configuration -->
		<property name="manifest.dir" location="./manifest" />
		<property name="jar.genoogle" location="${build.dir}/genoogle.jar" />
		<property name="jar.genoogle" location="${build.dir}/genoogle.war" />


		<!-- Javac properties -->
		<property name="javac.depend" value="false" />
		<property name="javac.debug" value="true" />
		<property name="javac.deprecation" value="false" />
		<property name="javac.source" value="6" />
		<property name="javac.target" value="6" />

		<!-- Javadoc properties -->
		<property name="build.docs" location="${build.dir}/docs" />
		<property name="packages" value="bio.pih.*" />

		<!-- Tests properties -->
		<property name="reports.tests" value="${build.dir}/tests/report" />


		<echo message="JUnit present:                      ${junit.present}" />
		<echo message="JUnit supported by Ant:             ${junit.support}" />
		<echo message="Keep it up, rock 'n' roll, good music save your soul" />
	</target>

	<!-- Prepares the biojava source code -->
	<target name="prepare" depends="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.docs}" />
		<mkdir dir="${reports.tests}" />
	</target>

	<target name="compile" depends="prepare">
		<javac encoding="ISO-8859-15" srcdir="${src.dir}" destdir="${build.classes.dir}" depend="${javac.depend}" deprecation="${javac.deprecation}" source="${javac.source}" target="${javac.target}" debug="${javac.debug}">
			<classpath>
				<fileset dir="./lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="package" depends="compile">
<!--		<war destfile="${war.genoogle}">
			<fileset dir="webapps"/>
		</war>
		-->
		<jar jarfile="${jar.genoogle}" manifest="${manifest.dir}/genoogle.txt">
			<fileset dir="${build.classes.dir}" />
		</jar>
	</target>

	<!-- Creates the API documentation -->
	<target name="javadoc" depends="compile" description="Creates the API documentation">
		<javadoc encoding="ISO-8859-1" packagenames="${packages}" sourcepath="${src.dir}" classpath="${classpath}" destdir="${build.docs}" author="true" version="true" use="true" source="1.6" windowtitle="${name}-${version} API" doctitle="${name}-${version}" maxmemory="192m">
			<link href="http://java.sun.com/javase/6/docs/api/" offline="false" />

			<excludepackage name="bio.pih.tests.*" />

			<group title="Indexer" packages="bio.pih.indexer" />
			<group title="Scheduler" packages="bio.pih.scheduler" />
			<group title="Communicator" packages="bio.pih.scheduler.communicator:bio.pih.scheduler.communicator.*" />
			<group title="Search" packages="bio.pih.search" />
			<group title="Seq" packages="bio.pih.seq:bio.pih.seq.*" />
			<group title="util" packages="bio.pih.util" />

		</javadoc>
	</target>

	<target name="start-scheduler" depends="package">
		<java classname="bio.pih.Genoogle" fork="true">
			<arg value="-s" />
			<arg value="files/workers" />
			<classpath>
				<pathelement location="${jar.genoogle}" />
				<fileset dir="./lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="start-worker" depends="package">
		<java classname="bio.pih.Genoogle" fork="true" spawn="true">
			<arg value="-w" />
			<arg value="5000" />
			<classpath>
				<pathelement location="${jar.genoogle}" />
				<fileset dir="./lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>

		<java classname="bio.pih.Genoogle" fork="true" spawn="true">
			<arg value="-w" />
			<arg value="5001" />
			<classpath>
				<pathelement location="${jar.genoogle}" />
				<fileset dir="./lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

	<target name="start-web" depends="package">
		<echo message="Starting web server" />

		<java maxmemory="512m" classname="bio.pih.web.WebServer" fork="true">
			<arg value="localhost" />
			<arg value="/home/albrecht/genoogle/webapps" />
			<arg value="8080"/>
			<classpath>
				<pathelement location="${jar.genoogle}" />
				<fileset dir="./lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>


	<!-- Runs tests if the Ant optional JUnit support is available -->
	<target name="run-tests" depends="compile">
		<property name="test.subtree" value="**" />
		<echo message="Running tests:           ${test.subtree}" />
		<junit maxmemory="128m" printsummary="yes" haltonfailure="no" reloading="no">
			<formatter type="plain" usefile="true" />
			<classpath>
				<!-- main classes from build -->
				<pathelement path="${build.classes.dir}" />
				<!-- classes specified in this file -->
				<pathelement path="${classpath}" />
				<!-- classes specified in system classpath -->
				<pathelement path="${java.class.path}" />
			</classpath>

			<!-- The junit task doesn't support 'if' so we test for JUnit here -->
			<batchtest fork="no" todir="${reports.tests}" if="junit.present">
				<fileset dir="${build.classes.dir}">
					<include name="${test.subtree}/*Test.class" />
					<include name="${test.subtree}/*TestSuite.class" />
					<exclude name="**/Abstract*Test.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="clear" depends="init" description="clean">
		<echo message="Deleting ${build.dir}" />
		<delete dir="${build.dir}" />
	</target>



</project>
